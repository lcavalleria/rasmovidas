worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 80;
        server_name _;  # You can use the IP of the server if not using a domain

        # Pass requests to Jellyfin backend
        location / {
            proxy_pass http://jellyfin:8096;  # Reference Jellyfin container by name within the custom network
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Optional: Redirect HTTP to HTTPS if you plan to use SSL later
        # if ($scheme = http) {
        #     return 301 https://$server_name$request_uri;
        # }
    }

# Optional: SSL configuration (for when you're ready to use HTTPS)
# server {
#     listen 443 ssl;
#     server_name rasmovidas.com;
#     ssl_certificate /etc/ssl/certs/your_certificate.crt;
#     ssl_certificate_key /etc/ssl/private/your_private_key.key;
#
#     location / {
#         proxy_pass http://jellyfin:8096;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }
}
